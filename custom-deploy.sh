#!/bin/bash
# Generated by incus-composer
# Generated at: 2024-01-01T01:42:50Z
# Generator version: 0.1.0
# Source hash: sha256:abc123def456_13

set -e  # Exit on any error

echo 'Starting incus-composer deployment...'

# ============================================
# Network Creation
# ============================================

echo 'Executing: incus network create internal --type=bridge'
incus network create internal --type=bridge
echo 'Executing: incus network set internal ipv4.address=10.0.1.1'
incus network set internal ipv4.address=10.0.1.1
echo 'Executing: incus network set internal ipv4.dhcp=false'
incus network set internal ipv4.dhcp=false
echo 'Executing: incus network create dmz --type=bridge'
incus network create dmz --type=bridge
echo 'Executing: incus network set dmz ipv4.address=192.168.11.1'
incus network set dmz ipv4.address=192.168.11.1
echo 'Executing: incus network set dmz ipv4.dhcp=false'
incus network set dmz ipv4.dhcp=false
echo 'Executing: incus network create management --type=bridge'
incus network create management --type=bridge
echo 'Executing: incus network set management ipv4.address=192.168.12.1'
incus network set management ipv4.address=192.168.12.1
echo 'Executing: incus network set management ipv4.dhcp=false'
incus network set management ipv4.dhcp=false
echo 'Executing: incus network create external --type=bridge'
incus network create external --type=bridge
echo 'Executing: incus network set external ipv4.address=203.0.113.1'
incus network set external ipv4.address=203.0.113.1
echo 'Executing: incus network set external ipv4.dhcp=false'
incus network set external ipv4.dhcp=false
echo 'Executing: incus network create backup --type=bridge'
incus network create backup --type=bridge
echo 'Executing: incus network set backup ipv4.address=192.168.14.1'
incus network set backup ipv4.address=192.168.14.1
echo 'Executing: incus network set backup ipv4.dhcp=false'
incus network set backup ipv4.dhcp=false

# ============================================
# Instance Creation and Configuration
# ============================================

echo 'Executing: incus create base_image simple_web_server --type=container'
incus create base_image simple_web_server --type=container
echo 'Executing: incus config set simple_web_server limits.cpu=2'
incus config set simple_web_server limits.cpu=2
echo 'Executing: incus config set simple_web_server limits.memory=2GB'
incus config set simple_web_server limits.memory=2GB
echo 'Executing: incus config device add simple_web_server eth0 nic network=bridge hwaddr=02:00:00:00:00:01'
incus config device add simple_web_server eth0 nic network=bridge hwaddr=02:00:00:00:00:01
echo 'Executing: incus start simple_web_server'
incus start simple_web_server
echo 'Executing: incus create base_image public_api_server --type=container'
incus create base_image public_api_server --type=container
echo 'Executing: incus config set public_api_server limits.cpu=2'
incus config set public_api_server limits.cpu=2
echo 'Executing: incus config set public_api_server limits.memory=2GB'
incus config set public_api_server limits.memory=2GB
echo 'Executing: incus config device add public_api_server eth0 nic network=dmz hwaddr=02:00:00:00:00:02'
incus config device add public_api_server eth0 nic network=dmz hwaddr=02:00:00:00:00:02
echo 'Executing: incus config device set public_api_server eth0 ipv4.address=192.168.11.10'
incus config device set public_api_server eth0 ipv4.address=192.168.11.10
echo 'Executing: incus start public_api_server'
incus start public_api_server
echo 'Executing: incus create base_image cluster_master --type=container'
incus create base_image cluster_master --type=container
echo 'Executing: incus config set cluster_master limits.cpu=2'
incus config set cluster_master limits.cpu=2
echo 'Executing: incus config set cluster_master limits.memory=2GB'
incus config set cluster_master limits.memory=2GB
echo 'Executing: incus config device add cluster_master eth0 nic network=internal hwaddr=02:00:00:00:00:03'
incus config device add cluster_master eth0 nic network=internal hwaddr=02:00:00:00:00:03
echo 'Executing: incus config device set cluster_master eth0 ipv4.address=10.0.1.10'
incus config device set cluster_master eth0 ipv4.address=10.0.1.10
# Apply role 'kubernetes_master' to cluster_master with values: []
# Apply role 'etcd' to cluster_master with values: []
echo 'Executing: incus start cluster_master'
incus start cluster_master
echo 'Executing: incus create router_image core_router --type=container'
incus create router_image core_router --type=container
echo 'Executing: incus config set core_router limits.cpu=2'
incus config set core_router limits.cpu=2
echo 'Executing: incus config set core_router limits.memory=2GB'
incus config set core_router limits.memory=2GB
echo 'Executing: incus config device add core_router eth0 nic network=internal hwaddr=02:00:00:00:00:04'
incus config device add core_router eth0 nic network=internal hwaddr=02:00:00:00:00:04
echo 'Executing: incus config device set core_router eth0 ipv4.address=10.0.1.2'
incus config device set core_router eth0 ipv4.address=10.0.1.2
echo 'Executing: incus config device add core_router eth1 nic network=dmz'
incus config device add core_router eth1 nic network=dmz
echo 'Executing: incus config device set core_router eth1 ipv4.address=192.168.11.2'
incus config device set core_router eth1 ipv4.address=192.168.11.2
echo 'Executing: incus config device add core_router eth2 nic network=management'
incus config device add core_router eth2 nic network=management
echo 'Executing: incus config device set core_router eth2 ipv4.address=192.168.12.2'
incus config device set core_router eth2 ipv4.address=192.168.12.2
# Apply role 'router' to core_router with values: ["ospf", "bgp"]
echo 'Executing: incus start core_router'
incus start core_router
echo 'Executing: incus create database_image legacy_database --type=container'
incus create database_image legacy_database --type=container
echo 'Executing: incus config set legacy_database limits.cpu=2'
incus config set legacy_database limits.cpu=2
echo 'Executing: incus config set legacy_database limits.memory=2GB'
incus config set legacy_database limits.memory=2GB
echo 'Executing: incus config device add legacy_database eth0 nic network=internal hwaddr=02:00:00:00:00:05'
incus config device add legacy_database eth0 nic network=internal hwaddr=02:00:00:00:00:05
echo 'Executing: incus config device set legacy_database eth0 ipv4.address=10.0.1.11'
incus config device set legacy_database eth0 ipv4.address=10.0.1.11
# Apply role 'postgresql' to legacy_database with values: ["primary", "backup_enabled"]
echo 'Executing: incus start legacy_database'
incus start legacy_database
echo 'Executing: incus create monitoring_image legacy_monitoring --type=container'
incus create monitoring_image legacy_monitoring --type=container
echo 'Executing: incus config set legacy_monitoring limits.cpu=2'
incus config set legacy_monitoring limits.cpu=2
echo 'Executing: incus config set legacy_monitoring limits.memory=2GB'
incus config set legacy_monitoring limits.memory=2GB
echo 'Executing: incus config device add legacy_monitoring eth0 nic network=internal hwaddr=02:00:00:00:00:06'
incus config device add legacy_monitoring eth0 nic network=internal hwaddr=02:00:00:00:00:06
echo 'Executing: incus config device set legacy_monitoring eth0 ipv4.address=10.0.1.12'
incus config device set legacy_monitoring eth0 ipv4.address=10.0.1.12
echo 'Executing: incus config device add legacy_monitoring eth1 nic network=management'
incus config device add legacy_monitoring eth1 nic network=management
echo 'Executing: incus config device set legacy_monitoring eth1 ipv4.address=192.168.12.10'
incus config device set legacy_monitoring eth1 ipv4.address=192.168.12.10
# Apply role 'prometheus' to legacy_monitoring with values: []
# Apply role 'grafana' to legacy_monitoring with values: ["admin_user:monitor"]
echo 'Executing: incus start legacy_monitoring'
incus start legacy_monitoring
echo 'Executing: incus create application_image complex_application_server --type=container'
incus create application_image complex_application_server --type=container
echo 'Executing: incus config set complex_application_server limits.cpu=2'
incus config set complex_application_server limits.cpu=2
echo 'Executing: incus config set complex_application_server limits.memory=2GB'
incus config set complex_application_server limits.memory=2GB
echo 'Executing: incus config device add complex_application_server eth0 nic network=internal hwaddr=02:00:00:00:00:07'
incus config device add complex_application_server eth0 nic network=internal hwaddr=02:00:00:00:00:07
echo 'Executing: incus config device set complex_application_server eth0 ipv4.address=10.0.1.13'
incus config device set complex_application_server eth0 ipv4.address=10.0.1.13
# Apply role 'application_server' to complex_application_server with values: ["java", "spring_boot"]
# Apply role 'monitoring' to complex_application_server with values: ["prometheus_node_exporter"]
# Apply role 'logging' to complex_application_server with values: ["filebeat", "logstash"]
echo 'Executing: incus start complex_application_server'
incus start complex_application_server
echo 'Executing: incus create router_image edge_router --type=container'
incus create router_image edge_router --type=container
echo 'Executing: incus config set edge_router limits.cpu=2'
incus config set edge_router limits.cpu=2
echo 'Executing: incus config set edge_router limits.memory=2GB'
incus config set edge_router limits.memory=2GB
echo 'Executing: incus config device add edge_router eth0 nic network=dmz hwaddr=02:00:00:00:00:08'
incus config device add edge_router eth0 nic network=dmz hwaddr=02:00:00:00:00:08
echo 'Executing: incus config device set edge_router eth0 ipv4.address=192.168.11.3'
incus config device set edge_router eth0 ipv4.address=192.168.11.3
echo 'Executing: incus config device add edge_router eth1 nic network=external'
incus config device add edge_router eth1 nic network=external
echo 'Executing: incus config device set edge_router eth1 ipv4.address=203.0.113.2'
incus config device set edge_router eth1 ipv4.address=203.0.113.2
echo 'Executing: incus start edge_router'
incus start edge_router

echo 'Deployment completed successfully!'