# Incus Compose Schema Example
# Version 1.0

version: "1.0"

# Define containers and virtual machines
containers:
  # A web server container
  web:
    instance_type: container
    image: "ubuntu/22.04"
    image_server: "images:"
    description: "Web server running nginx"
    
    # Memory limit
    memory:
      limit: "2GB"
    
    # CPU configuration
    cpu:
      limit: "2"
      allowance: "50%"
    
    # Network interfaces
    networks:
      - web-net
    
    # Storage volumes
    volumes:
      - source: "web-data"
        target: "/var/www/html"
        pool: "default"
        readonly: false
    
    # Environment variables
    environment:
      APP_ENV: "production"
      LOG_LEVEL: "info"
    
    # Profiles to apply
    profiles:
      - default
      - web-profile
    
    # Autostart on boot
    autostart: true
    
    # Cloud-init configuration
    cloud_init:
      user_data: |
        #cloud-config
        packages:
          - nginx
        runcmd:
          - systemctl enable nginx
          - systemctl start nginx

  # A database container
  database:
    instance_type: container
    image: "ubuntu/22.04"
    image_server: "images:"
    description: "PostgreSQL database server"
    
    memory:
      limit: "4GB"
      swap: "2GB"
    
    cpu:
      limit: "4"
    
    networks:
      - backend-net
    
    volumes:
      - source: "db-data"
        target: "/var/lib/postgresql"
        pool: "fast-storage"
    
    environment:
      POSTGRES_DB: "myapp"
      POSTGRES_USER: "appuser"
    
    profiles:
      - default
    
    autostart: true
    boot_priority: 10

  # A virtual machine for testing
  test-vm:
    instance_type: virtual-machine
    image: "ubuntu/22.04"
    image_server: "images:"
    description: "Test environment VM"
    
    memory:
      limit: "8GB"
    
    cpu:
      limit: "4"
    
    networks:
      - test-net
    
    # Device configuration
    devices:
      root:
        type: disk
        source: "/path/to/disk.img"
        path: "/"
      eth0:
        type: nic
        network: "test-net"
        name: "eth0"
      proxy-web:
        type: proxy
        listen: "tcp:0.0.0.0:8080"
        connect: "tcp:127.0.0.1:80"
    
    profiles:
      - default
    
    autostart: false
    
    # Dependencies - start after database
    depends_on:
      - database

# Network definitions
networks:
  web-net:
    type: bridge
    description: "Network for web-facing services"
    config:
      ipv4.address: "10.0.1.1/24"
      ipv4.nat: "true"
      ipv6.address: "none"
  
  backend-net:
    type: bridge
    description: "Backend services network"
    config:
      ipv4.address: "10.0.2.1/24"
      ipv4.nat: "false"
  
  test-net:
    type: bridge
    description: "Isolated test network"
    config:
      ipv4.address: "10.0.3.1/24"
      ipv4.nat: "true"

# Storage pool definitions
storage:
  default:
    driver: dir
    description: "Default directory-based storage"
    config:
      source: "/var/lib/incus/storage-pools/default"
  
  fast-storage:
    driver: zfs
    description: "ZFS pool for high-performance storage"
    config:
      source: "tank/incus"
      volume.size: "50GB"

# Profile definitions
profiles:
  web-profile:
    description: "Common profile for web servers"
    config:
      security.nesting: "true"
      linux.kernel_modules: "ip_tables,ip6_tables"
    devices:
      eth0:
        type: nic
        network: "web-net"
        name: "eth0"
